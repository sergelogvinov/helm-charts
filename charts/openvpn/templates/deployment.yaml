apiVersion: apps/v1
{{- if .Values.useDaemonSet }}
kind: DaemonSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: {{ include "openvpn.fullname" . }}
  labels:
    {{- include "openvpn.labels" . | nindent 4 }}
spec:
  {{- if not .Values.useDaemonSet }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.updateStrategy.type }}
    rollingUpdate:
      {{- toYaml .Values.updateStrategy.rollingUpdate | nindent 6 }}
  {{- else }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "openvpn.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- if .Values.openvpn.config }}
        checksum/config: {{ .Values.openvpn.config | sha256sum }}
      {{- end }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "openvpn.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
              drop:
                - ALL
            runAsNonRoot: false
            runAsUser: 0
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/entrypoint/init.sh"]
          volumeMounts:
            - name: scripts
              mountPath: /entrypoint
      containers:
        {{- range (eq .Values.service.proto "All" | ternary (list "tcp" "udp") (list .Values.service.proto)) }}
        - name: {{ $.Chart.Name }}-{{ . }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          command: ["/entrypoint/start.sh","--proto", "{{ . }}6"]
          ports:
            {{- if $.Values.service.port }}
            - name: openvpn-{{ . }}
              containerPort: {{ $.Values.service.port }}
              protocol: {{ . | upper }}
            {{- end }}
          volumeMounts:
            - name: scripts
              mountPath: /entrypoint
            - name: config
              mountPath: /etc/openvpn/server
            - name: users
              mountPath: /etc/openvpn/users
            - name: certs
              mountPath: /etc/openvpn/certs
            - name: auth
              mountPath: /etc/openvpn/auth
            - name: tmp
              mountPath: /tmp
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
        {{- end }}
        {{- if .Values.dns.enabled }}
        - name: {{ .Chart.Name }}-dns
          image: registry.k8s.io/coredns/coredns:v1.12.4
          imagePullPolicy: IfNotPresent
          args: [ "-conf", "/etc/coredns/Corefile" ]
          env:
            - name: GOMAXPROCS
              value: "1"
          volumeMounts:
            - name: coredns
              mountPath: /etc/coredns
              readOnly: true
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsUser: 0
            runAsGroup: 53
        {{- end }}
        {{- if ne (len .Values.service.ports) 0 }}
        - name: {{ .Chart.Name }}-service
          securityContext:
            capabilities:
              add: ["NET_BIND_SERVICE"]
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 99
            runAsGroup: 99
          image: "ghcr.io/sergelogvinov/haproxy:2.8.3-alpine3.18"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/local/sbin/haproxy","-f","/usr/local/etc/haproxy/haproxy.cfg"]
          ports:
            - name: stats
              containerPort: 8404
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 32Mi
          volumeMounts:
            - name: config
              mountPath: /usr/local/etc/haproxy
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: scripts
          configMap:
            name: {{ include "openvpn.fullname" . }}
            defaultMode: 493
            items:
              - key: init.sh
                path: init.sh
              - key: start.sh
                path: start.sh
        - name: config
          configMap:
            name: {{ template "openvpn.fullname" . }}
            defaultMode: 288
            items:
              - key: server.conf
                path: server.conf
            {{- if .Values.certManager.clients }}
              - key: users.list
                path: users.list
            {{- end }}
            {{- if ne (len .Values.service.ports) 0 }}
              - key: haproxy.cfg
                path: haproxy.cfg
            {{- end }}
        - name: users
          configMap:
            name: {{ template "openvpn.fullname" . }}-users
            defaultMode: 288
        - name: certs
          secret:
            secretName: {{ include "openvpn.fullname" . }}
            defaultMode: 256
        - name: auth
          secret:
            secretName: {{ include "openvpn.fullname" . }}-auth
            defaultMode: 256
        - name: coredns
          configMap:
            name: {{ template "openvpn.fullname" . }}
            defaultMode: 256
            items:
              - key: corefile
                path: Corefile
        - name: tmp
          emptyDir: {}
