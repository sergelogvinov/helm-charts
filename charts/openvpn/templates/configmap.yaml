apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "openvpn.fullname" . }}
  labels:
    {{- include "openvpn.labels" . | nindent 4 }}
data:
  corefile: |
    .:53 {
        errors

        health :8080 {
          lameduck 5s
        }

        {{- if .Values.clusterDomain }}
        forward {{ .Values.clusterDomain }} /etc/resolv.conf {
          policy sequential
          expire 30s
        }
        {{- end }}

        forward . tls://1.1.1.1 tls://1.0.0.1 {
          tls_servername cloudflare-dns.com
          policy sequential
          health_check 30s
          expire 60s
        }

        cache 300
        reload
        loadbalance
    }

  init.sh: |-
    #!/bin/sh
    iptables  -t nat -I POSTROUTING -o eth0 -j MASQUERADE ||:
    ip6tables -t nat -I POSTROUTING -o eth0 -j MASQUERADE ||:

  start.sh: |-
    #!/bin/sh
    mkdir -p /dev/net
    mknod /dev/net/tun c 10 200
    exec openvpn --config /etc/openvpn/server/server.conf $@

  users.list: |-
    {{- if .Values.certManager.clients }}{{- range $k := .Values.certManager.clients }}
    {{ regexSplit "@" ($k | trunc 63 | trimAll ".") 2 | first }}
    {{- end }}{{- end }}

  server.conf: |-
    #
    port  {{ .Values.service.port }}

    dev tun
    dev-type tun
    tun-mtu 1400
    mssfix 1160

    keepalive 10 120
    user openvpn
    group openvpn
    persist-key
    persist-tun
    verb 2
    mute 20
    status-version 2

    mode server
    tls-server
    tls-version-min {{ default "1.3" (get .Values.openvpn.tlsversion "tls-version-min") }}
    tls-cipher {{ default "TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384:TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256:TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256" (get .Values.openvpn.tlsversion "tls-cipher") }}
    {{- if .Values.certManager.createCerts }}
    tls-groups prime256v1:secp521r1:secp384r1
    {{- end }}
    verify-client-cert require
    remote-cert-tls client

    {{- if .Values.openvpn.config }}
    {{- .Values.openvpn.config | nindent 4 }}
    {{- else }}
    server 172.30.0.0 255.255.255.0
    server-ipv6 fd97:16af:7907::/64
    topology subnet

    data-ciphers AES-256-GCM:AES-128-GCM:?CHACHA20-POLY1305
    data-ciphers-fallback AES-256-CBC

    {{- if .Values.dns.enabled }}
    push "dhcp-option DNS 172.30.0.1"
    {{- end }}
    {{- end }}
    {{- if .Values.openvpn.redirectGateway }}
    push "redirect-gateway def1"
    push "redirect-gateway ipv6"
    {{- end }}

    ifconfig-pool-persist /tmp/ipp.txt 15
    client-config-dir /etc/openvpn/users

    {{- if .Values.openvpn.otp }}
    plugin /usr/lib/openvpn/plugins/openvpn-plugin-auth-pam.so "openvpn login USERNAME password PASSWORD pin OTP"
    auth-user-pass-optional
    auth-gen-token 36000
    reneg-sec 3600
    {{- end }}

    ca   /etc/openvpn/certs/ca.crt
    cert /etc/openvpn/certs/tls.crt
    key  /etc/openvpn/certs/tls.key
    {{- if .Values.openvpn.dh }}
    dh /etc/openvpn/auth/dh.pem
    {{- else }}
    dh none
    {{- end }}
    {{- if .Values.openvpn.tlsauth }}
    tls-auth /etc/openvpn/auth/tlsauth.key 0
    {{- end }}

    {{- if .Values.openvpn.revoke }}
    <crl-verify>
    {{- .Values.openvpn.revoke | nindent 4 -}}
    </crl-verify>
    {{- end }}

  client.conf: |-
    client
    dev tun
    tun-mtu 1400
    {{- range (eq .Values.service.proto "All" | ternary (list "tcp" "udp") (list .Values.service.proto)) }}
    remote {{ $.Values.openvpn.hostName }} {{ default "30190" $.Values.service.nodePort }} {{ . | lower }}
    {{- end }}
    remote-random
    resolv-retry infinite
    ping 10
    ping-restart 120
    mute 4
    mute-replay-warnings

    nobind
    persist-key
    persist-tun
    auth-nocache
    {{- if .Values.openvpn.otp }}
    auth-user-pass # pass
    static-challenge "Enter 2FA token: " 0
    {{- end }}
    data-ciphers AES-256-GCM:AES-256-CBC
    remote-cert-tls server

    {{- $ca := lookup "v1" "Secret" .Release.Namespace (include "openvpn.fullname" .) }}
    {{- if and .Values.certManager.createCerts $ca }}
    <ca>
    {{- get $ca.data "ca.crt" | b64dec | nindent 4 -}}
    </ca>
    {{- else }}
    ca   ca.crt
    {{- end }}
    cert client.crt
    key  client.key
    {{- if .Values.openvpn.dh }}
    <dh>
    {{- .Values.openvpn.dh | nindent 4 -}}
    </dh>
    {{- end }}
    {{- if .Values.openvpn.tlsauth }}
    key-direction 1
    <tls-auth>
    {{- .Values.openvpn.tlsauth | nindent 4 -}}
    </tls-auth>
    {{- end }}

  haproxy.cfg: |
    global
      maxconn 8192
      ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
      ssl-default-server-options no-tls-tickets ssl-min-ver TLSv1.2
      ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
      ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384
      ssl-default-bind-options prefer-client-ciphers no-tls-tickets ssl-min-ver TLSv1.2

      stats socket /tmp/haproxy.sock mode 600 level admin
      log stdout len 65535 format raw local0 info

    resolvers clusterdns
      parse-resolv-conf
      resolve_retries  3
      timeout resolve 60s
      timeout retry    5s
      hold other     60s
      hold refused   30s
      hold nx        30s
      hold timeout   30s
      hold valid     60s
      hold obsolete  60s

    defaults
      mode tcp
      option  dontlognull
      timeout connect         4s
      timeout server          86400s
      timeout client          86400s
      timeout http-keep-alive 1m
      default-server init-addr libc,none

      log global
      log-format '{"remote_addr":"%ci","backend":"%b","retries":%rc,"bytes_read":%B,"bytes_uploaded":%U,"cons":%fc}'

    frontend stats
      mode http
      bind *:8404
      http-request use-service prometheus-exporter if { path /metrics }
      stats enable
      stats uri /
      stats refresh 10s
      stats hide-version
      monitor-uri /healthz
      option dontlognull
      option clitcpka
      maxconn 16

    # services
    {{- range $key, $value := .Values.service.ports }}
    frontend {{ .name }}
      bind *:{{ .port }} mss 1160
      option clitcpka
      use_backend {{ .name }}
    backend {{ .name }}
      mode tcp
      option   tcp-check
      balance  leastconn
      fullconn 512
      default-server check inter 30s fastinter 10s downinter 5s fall 3 rise 8 on-marked-down shutdown-sessions resolve-prefer ipv4
      server {{ .name }} {{ .backend }} resolvers clusterdns

    {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "openvpn.fullname" . }}-users
  labels:
    {{- include "openvpn.labels" . | nindent 4 }}
data:
  DEFAULT: |-
    {{- if .Values.openvpn.defaultroutes }}
    {{- .Values.openvpn.defaultroutes | nindent 4 }}
    {{- end }}
