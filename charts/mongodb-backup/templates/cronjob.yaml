{{- if semverCompare ">=1.22" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: batch/v1
{{- else -}}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: {{ include "mongodb-backup.fullname" . }}
  labels:
    {{- with .Values.podlabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- include "mongodb-backup.labels" . | nindent 4 }}
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  suspend: {{ eq .Values.schedule "" }}
  schedule: {{ default "10 3 * * *" .Values.schedule | quote }}
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 43200 # 12h
      activeDeadlineSeconds: {{ .Values.activeDeadlineSeconds }}
      backoffLimit: 0
      template:
        metadata:
          name: {{ include "mongodb-backup.fullname" . }}
          labels:
            {{- with .Values.podlabels }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- include "mongodb-backup.selectorLabels" . | nindent 12 }}
        spec:
          restartPolicy: Never
          enableServiceLinks: false
          {{- if .Values.priorityClassName }}
          priorityClassName: {{ .Values.priorityClassName }}
          {{- end }}
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "mongodb-backup.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
            - name: {{ .Chart.Name }}
              securityContext:
                {{- toYaml .Values.securityContext | nindent 16 }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command: ["/docker-entrypoint-initdb.d/backup.sh"]
              # command: ["sleep","6000000"]
              {{- if .Values.env }}
              env:
                {{- toYaml .Values.env | nindent 16 }}
              {{- end }}
              volumeMounts:
                - name: command
                  mountPath: /docker-entrypoint-initdb.d
                - name: walg
                  mountPath: /etc/walg
                  readOnly: true
              {{- if .Values.extraVolumeMounts }}
                {{- toYaml .Values.extraVolumeMounts | nindent 16 }}
              {{- end }}
              {{- if .Values.persistence.enabled }}
                - name: backup
                  mountPath: /backup
              {{- end }}
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumes:
            - name: command
              configMap:
                name: {{ include "mongodb-backup.fullname" . }}
                defaultMode: 360
            - name: walg
              secret:
                secretName:  {{ include "mongodb-backup.fullname" . }}
                defaultMode: 288
          {{- if .Values.extraVolumes }}
            {{- toYaml .Values.extraVolumes | nindent 12 }}
          {{- end }}
{{- if .Values.persistence.enabled }}
            - name: backup
              persistentVolumeClaim:
{{- if .Values.persistence.existingClaim }}
                claimName: {{ .Values.persistence.existingClaim }}
{{- else }}
                claimName: datadir-{{ include "mongodb-backup.fullname" . }}
{{- end }}
{{- end }}
