apiVersion: apps/v1
{{- if .Values.useDaemonSet }}
kind: DaemonSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: {{ include "pgbouncer.fullname" . }}
  labels:
    {{- include "pgbouncer.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- if not .Values.useDaemonSet }}
  strategy:
    type: {{ .Values.updateStrategy.type }}
  {{- else }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pgbouncer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include "pgbouncer.ini" . | sha256sum }}
      {{- if .Values.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9127"
      {{- end}}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pgbouncer.selectorLabels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      enableServiceLinks: false
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: psql
              containerPort: 5432
              protocol: TCP
          startupProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 5
            timeoutSeconds: 2
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /etc/pgbouncer
            - name: users
              mountPath: /etc/private
            - name: servertls
              mountPath: /etc/ssl/server
          {{- if .Values.clientSslSecret }}
            - name: clienttls
              mountPath: /etc/ssl/client
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.metrics.enabled }}
        - name: metrics
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}"
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "pgbouncer.fullname" . }}
                  key: pgmetricsURL
          ports:
            - name: metrics
              containerPort: 9127
              protocol: TCP
          resources:
            {{ toYaml .Values.metrics.resources | nindent 12 }}
        {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "pgbouncer.fullname" . }}
        - name: users
          secret:
            secretName: {{ include "pgbouncer.fullname" . }}
            defaultMode: 256
      {{- if .Values.serverSslSecret }}
        - name: servertls
          secret:
            secretName: {{ .Values.serverSslSecret }}
            defaultMode: 256
      {{- else }}
        - name: servertls
          secret:
            secretName: {{ include "pgbouncer.fullname" . }}
            defaultMode: 256
            items:
              - key: serverTLSca
                path: ca.crt
              - key: serverTLScert
                path: tls.crt
              - key: serverTLSkey
                path: tls.key
      {{- end }}
      {{- if .Values.clientSslSecret }}
        - name: clienttls
          secret:
            secretName: {{ .Values.clientSslSecret }}
            defaultMode: 256
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        {{- include "affinities.pods" . | nindent 8 }}
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
