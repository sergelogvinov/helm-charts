apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "keydb.fullname" . }}
  labels:
    {{- include "keydb.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "keydb.fullname" . }}-headless
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: Parallel
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
  selector:
    matchLabels:
      {{- include "keydb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include "keydb.commonConfig" . | sha256sum }}
        {{- if .Values.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
        {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "keydb.labels" . | nindent 8 }}
    spec:
      enableServiceLinks: false
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "keydb.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      initContainers:
        - name: config
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            readOnlyRootFilesystem: true
            capabilities:
              drop:
              - ALL
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - /entrypoint.d/init.sh
          volumeMounts:
            - name: common-config
              mountPath: /etc/keydb-common-config
              readOnly: true
            - name: config
              mountPath: /etc/keydb
            - name: command
              mountPath: /entrypoint.d
              readOnly: true
          {{- if .Values.backup.recovery }}
            - name: walg
              mountPath: /etc/walg
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
            - name: data
              mountPath: /data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/bin/keydb-server","/etc/keydb/keydb.conf"]
          env:
          {{- if .Values.keydb.password }}
            - name: REDISCLI_AUTH
              valueFrom:
                secretKeyRef:
                  name: {{ include "keydb.fullname" . }}
                  key: keydb_auth
          {{- end }}
          ports:
            - name: keydb
              containerPort: 6379
              protocol: TCP
            {{- if .Values.tlsCerts.create }}
            - name: keydb-tls
              containerPort: 6380
              protocol: TCP
            {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            tcpSocket:
              port: keydb
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            tcpSocket:
              port: keydb
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe }}
          startupProbe:
            tcpSocket:
              port: keydb
            {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/keydb
          {{- if or .Values.tlsCerts.create }}
            - name: tlscerts
              mountPath: /etc/ssl/tlscerts
          {{- end }}
            - name: data
              mountPath: /data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.metrics.enabled }}
        - name: {{ .Chart.Name }}-metrics
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            readOnlyRootFilesystem: true
            capabilities:
              drop:
              - ALL
          image: "{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}"
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
          env:
            - name: REDIS_ADDR
              value: "redis://127.0.0.1:6379"
            {{- if .Values.keydb.password }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "keydb.fullname" . }}
                  key: pass_metrics
            {{- end }}
            - name: REDIS_ALIAS
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: metrics
              containerPort: 9121
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 32Mi
            requests:
              cpu: 10m
              memory: 16Mi
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity: {{- include "affinities.pods" . | nindent 10 }}
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: common-config
          secret:
            secretName: {{ include "keydb.fullname" . }}
            defaultMode: 256
            items:
              - key: keydb.conf
                path: keydb.conf
        - name: command
          configMap:
            name: {{ include "keydb.fullname" . }}
            defaultMode: 360
        - name: config
          emptyDir:
            medium: Memory
      {{- if .Values.backup.recovery }}
        - name: walg
          secret:
            secretName:  {{ include "keydb.fullname" . }}
            defaultMode: 256
            items:
              - key: walg.yaml
                path: walg.yaml
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}
      {{- if .Values.tlsCerts.create }}
        - name: tlscerts
          secret:
            secretName: {{ include "keydb.fullname" . }}-server-tls
            defaultMode: 256
      {{- end }}
{{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
{{- else if .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
{{- else if not .Values.persistence.existingClaim }}
  volumeClaimTemplates:
    - metadata:
        name: data
      {{- with .Values.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
{{- end }}
