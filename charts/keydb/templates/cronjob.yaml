{{- if .Values.backup.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "keydb.fullname" . }}-backup
  labels:
    {{- include "keydb.crontab.labels" . | nindent 4 }}
    app.kubernetes.io/component: backup
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: {{ default 1 .Values.backup.history }}
  suspend: {{ eq .Values.backup.schedule "" }}
  schedule: {{ default "15 4 * * *" .Values.backup.schedule | quote }}
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 43200 # 12h
      activeDeadlineSeconds: 1800 # 30m
      backoffLimit: 1
      template:
        metadata:
          name: {{ include "keydb.fullname" . }}
          labels:
            {{- include "keydb.crontab.labels" . | nindent 12 }}
            app.kubernetes.io/component: backup
        spec:
          restartPolicy: Never
          enableServiceLinks: false
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "keydb.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
            - name: {{ .Chart.Name }}
              securityContext:
                {{- toYaml .Values.securityContext | nindent 16 }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command: ["/entrypoint.d/backup.sh"]
              # command: ["sleep","6000"]
              volumeMounts:
                - name: command
                  mountPath: /entrypoint.d
                - name: walg
                  mountPath: /etc/walg
              {{- if .Values.extraVolumeMounts }}
                {{- toYaml .Values.extraVolumeMounts | nindent 16 }}
              {{- end }}
              {{- if or .Values.tlsCerts.create }}
                - name: tlscerts
                  mountPath: /etc/ssl/tlscerts
              {{- end }}
              resources:
                {{- toYaml .Values.backup.resources | nindent 16 }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchLabels:
                      {{- include "keydb.selectorLabels" . | nindent 22 }}
                      statefulset.kubernetes.io/pod-name: {{ include "keydb.primary" . }}
                  topologyKey: kubernetes.io/hostname
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumes:
            - name: command
              configMap:
                name: {{ include "keydb.fullname" . }}
                defaultMode: 360
            - name: walg
              secret:
                secretName:  {{ include "keydb.fullname" . }}
                defaultMode: 256
                items:
                  - key: walg.yaml
                    path: walg.yaml
          {{- if .Values.extraVolumes }}
            {{- toYaml .Values.extraVolumes | nindent 12 }}
          {{- end }}
          {{- if .Values.tlsCerts.create }}
            - name: tlscerts
              secret:
                secretName: {{ include "keydb.fullname" . }}-server-tls
                defaultMode: 256
          {{- end }}
{{- end }}
