# Default values for registry-mirrors.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# -- Mirror tls auth
auth:
  tls: false
  # password: mirror-password

# -- Container mirrors
mirrors:
  - host: docker.io
    source: https://registry-1.docker.io
  - host: gcr.io
    source: https://gcr.io
  - host: ghcr.io
    source: https://ghcr.io
  - host: registry.k8s.io
    source: https://registry.k8s.io

# -- Pods Service Account.
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations for pod.
# ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}

# -- Pod Security Context.
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
podSecurityContext:
  runAsNonRoot: true
  fsGroup: 65534
  fsGroupChangePolicy: "OnRootMismatch"

# -- Container Security Context.
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
securityContext:
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop: ["ALL"]
  runAsUser: 65534
  runAsGroup: 65534
  # readOnlyRootFilesystem: true

# -- Service parameters
# ref: https://kubernetes.io/docs/user-guide/services/
service:
  type: ClusterIP
  port: 80

  ipFamilies: [IPv4]

# -- Mirror ingress parameters
# ref: http://kubernetes.io/docs/user-guide/ingress/
ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      path: /
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Resource requests and limits.
# ref: https://kubernetes.io/docs/user-guide/compute-resources/
resources:
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

# -- Persistence parameters
# ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
persistence:
  # storageClass: "-"
  accessModes:
    - ReadWriteOnce
  size: 1Gi
  annotations: {}

# -- pod deployment update strategy type.
# ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#updating-a-deployment
updateStrategy:
  type: RollingUpdate

# -- Node labels for pod assignment.
# ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector:
  {}
  # node-role.kubernetes.io/control-plane: ""

# -- Tolerations for pod assignment.
# ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations:
  []
  # - key: node-role.kubernetes.io/control-plane
  #   effect: NoSchedule

# -- Affinity for pod assignment.
# ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}
