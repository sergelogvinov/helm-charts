{{- /*
Generated from 'kubernetes-resources' group from https://raw.githubusercontent.com/prometheus-operator/kube-prometheus/main/manifests/kubernetesControlPlane-prometheusRule.yaml
Do not change in-place! In order to change this file first read following link:
https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack/hack
*/ -}}
{{- define "kubernetes-resources" }}
{{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
{{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.kubernetesResources }}
  - name: kubernetes-resources
    rules:
{{- if not (.Values.defaultRules.disabled.KubeCPUOvercommit | default false) }}
    - alert: KubeCPUOvercommit
      annotations:
        description: Cluster {{`{{`}} $labels.cluster {{`}}`}} has overcommitted CPU resource requests for Pods by {{`{{`}} printf "%.2f" $value {{`}}`}} CPU shares and cannot tolerate node failure.
        runbook_url: {{ .Values.defaultRules.runbookUrl }}/kubernetes/kubecpuovercommit
        summary: Cluster has overcommitted CPU resource requests.
      expr: |-
        # Non-HA clusters.
        (
          (
            sum by(cluster) (namespace_cpu:kube_pod_container_resource_requests:sum{})
            -
            sum by(cluster) (kube_node_status_allocatable{job="kubernetes-service-endpoints",resource="cpu"}) > 0
          )
          and
          count by (cluster) (max by (cluster, node) (kube_node_role{job="kubernetes-service-endpoints", role="control-plane"})) < 3
        )
        or
        # HA clusters.
        (
          sum by(cluster) (namespace_cpu:kube_pod_container_resource_requests:sum{})
          -
          (
            # Skip clusters with only one allocatable node.
            (
              sum by (cluster) (kube_node_status_allocatable{job="kubernetes-service-endpoints",resource="cpu"})
              -
              max by (cluster) (kube_node_status_allocatable{job="kubernetes-service-endpoints",resource="cpu"})
            ) > 0
          ) > 0
        )
      for: 10m
      labels:
        severity: warning
{{- end }}
{{- if not (.Values.defaultRules.disabled.KubeMemoryOvercommit | default false) }}
    - alert: KubeMemoryOvercommit
      annotations:
        description: Cluster {{`{{`}} $labels.cluster {{`}}`}} has overcommitted memory resource requests for Pods by {{`{{`}} $value | humanize {{`}}`}} bytes and cannot tolerate node failure.
        runbook_url: {{ .Values.defaultRules.runbookUrl }}/kubernetes/kubememoryovercommit
        summary: Cluster has overcommitted memory resource requests.
      expr: |-
        # Non-HA clusters.
        (
          (
            sum by(cluster) (namespace_memory:kube_pod_container_resource_requests:sum{})
            -
            sum by(cluster) (kube_node_status_allocatable{job="kubernetes-service-endpoints",resource="memory"}) > 0
          )
          and
          count by (cluster) (max by (cluster, node) (kube_node_role{job="kubernetes-service-endpoints", role="control-plane"})) < 3
        )
        or
        # HA clusters.
        (
          sum by(cluster) (namespace_memory:kube_pod_container_resource_requests:sum{})
          -
          (
            # Skip clusters with only one allocatable node.
            (
              sum by (cluster) (kube_node_status_allocatable{job="kubernetes-service-endpoints",resource="memory"})
              -
              max by (cluster) (kube_node_status_allocatable{job="kubernetes-service-endpoints",resource="memory"})
            ) > 0
          ) > 0
        )
      for: 10m
      labels:
        severity: warning
{{- end }}
{{- if not (.Values.defaultRules.disabled.KubeCPUQuotaOvercommit | default false) }}
    - alert: KubeCPUQuotaOvercommit
      annotations:
        description: Cluster {{`{{`}} $labels.cluster {{`}}`}} has overcommitted CPU resource requests for Namespaces.
        runbook_url: {{ .Values.defaultRules.runbookUrl }}/kubernetes/kubecpuquotaovercommit
        summary: Cluster has overcommitted CPU resource requests.
      expr: |-
        sum by(cluster) (
          min without(resource) (kube_resourcequota{job="kubernetes-service-endpoints", type="hard", resource=~"(cpu|requests.cpu)"})
        )
        /
        sum by(cluster) (
          kube_node_status_allocatable{resource="cpu", job="kubernetes-service-endpoints"}
        ) > 1.5
      for: 5m
      labels:
        severity: warning
{{- end }}
{{- if not (.Values.defaultRules.disabled.KubeMemoryQuotaOvercommit | default false) }}
    - alert: KubeMemoryQuotaOvercommit
      annotations:
        description: Cluster {{`{{`}} $labels.cluster {{`}}`}} has overcommitted memory resource requests for Namespaces.
        runbook_url: {{ .Values.defaultRules.runbookUrl }}/kubernetes/kubememoryquotaovercommit
        summary: Cluster has overcommitted memory resource requests.
      expr: |-
        sum by(cluster) (
          min without(resource) (kube_resourcequota{job="kubernetes-service-endpoints", type="hard", resource=~"(memory|requests.memory)"})
        )
        /
        sum by(cluster) (
          kube_node_status_allocatable{resource="memory", job="kubernetes-service-endpoints"}
        ) > 1.5
      for: 5m
      labels:
        severity: warning
{{- end }}
{{- if not (.Values.defaultRules.disabled.KubeQuotaAlmostFull | default false) }}
    - alert: KubeQuotaAlmostFull
      annotations:
        description: Namespace {{`{{`}} $labels.namespace {{`}}`}} is using {{`{{`}} $value | humanizePercentage {{`}}`}} of its {{`{{`}} $labels.resource {{`}}`}} quota on cluster {{`{{`}} $labels.cluster {{`}}`}}.
        runbook_url: {{ .Values.defaultRules.runbookUrl }}/kubernetes/kubequotaalmostfull
        summary: Namespace quota is going to be full.
      expr: |-
        kube_resourcequota{job="kubernetes-service-endpoints", type="used"}
          / ignoring(instance, job, type)
        (kube_resourcequota{job="kubernetes-service-endpoints", type="hard"} > 0)
          > 0.9 < 1
      for: 15m
      labels:
        severity: info
{{- end }}
{{- if not (.Values.defaultRules.disabled.KubeQuotaFullyUsed | default false) }}
    - alert: KubeQuotaFullyUsed
      annotations:
        description: Namespace {{`{{`}} $labels.namespace {{`}}`}} is using {{`{{`}} $value | humanizePercentage {{`}}`}} of its {{`{{`}} $labels.resource {{`}}`}} quota on cluster {{`{{`}} $labels.cluster {{`}}`}}.
        runbook_url: {{ .Values.defaultRules.runbookUrl }}/kubernetes/kubequotafullyused
        summary: Namespace quota is fully used.
      expr: |-
        kube_resourcequota{job="kubernetes-service-endpoints", type="used"}
          / ignoring(instance, job, type)
        (kube_resourcequota{job="kubernetes-service-endpoints", type="hard"} > 0)
          == 1
      for: 15m
      labels:
        severity: info
{{- end }}
{{- if not (.Values.defaultRules.disabled.KubeQuotaExceeded | default false) }}
    - alert: KubeQuotaExceeded
      annotations:
        description: Namespace {{`{{`}} $labels.namespace {{`}}`}} is using {{`{{`}} $value | humanizePercentage {{`}}`}} of its {{`{{`}} $labels.resource {{`}}`}} quota on cluster {{`{{`}} $labels.cluster {{`}}`}}.
        runbook_url: {{ .Values.defaultRules.runbookUrl }}/kubernetes/kubequotaexceeded
        summary: Namespace quota has exceeded the limits.
      expr: |-
        kube_resourcequota{job="kubernetes-service-endpoints", type="used"}
          / ignoring(instance, job, type)
        (kube_resourcequota{job="kubernetes-service-endpoints", type="hard"} > 0)
          > 1
      for: 15m
      labels:
        severity: warning
{{- end }}
{{- if not (.Values.defaultRules.disabled.CPUThrottlingHigh | default false) }}
    - alert: CPUThrottlingHigh
      annotations:
        description: '{{`{{`}} $value | humanizePercentage {{`}}`}} throttling of CPU in namespace {{`{{`}} $labels.namespace {{`}}`}} for container {{`{{`}} $labels.container {{`}}`}} in pod {{`{{`}} $labels.pod {{`}}`}} on cluster {{`{{`}} $labels.cluster {{`}}`}}.'
        runbook_url: {{ .Values.defaultRules.runbookUrl }}/kubernetes/cputhrottlinghigh
        summary: Processes experience elevated CPU throttling.
      expr: |-
        sum(increase(container_cpu_cfs_throttled_periods_total{container!="", job="kubelet", metrics_path="/metrics/cadvisor", }[5m])) without (id, metrics_path, name, image, endpoint, job, node)
          / on (cluster, namespace, pod, container, instance) group_left
        sum(increase(container_cpu_cfs_periods_total{job="kubelet", metrics_path="/metrics/cadvisor", }[5m])) without (id, metrics_path, name, image, endpoint, job, node)
          > ( 25 / 100 )
      for: 15m
      labels:
        severity: info
{{- end }}
{{- end }}
{{- end }}