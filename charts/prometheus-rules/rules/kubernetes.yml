- name: kubernetes.rules
  rules:
  - alert: PodMemoryLimit
    expr: irate(container_memory_failcnt{container_name!=""}[5m]) > 10
    for: 10m
    labels:
      severity: warning
    annotations:
      description: Pod {{$labels.namespace}}/{{$labels.pod}} reached the memory limit.
      summary: Memory limit reached

  - alert: PodMemoryResourcesAboveRequested
    expr: topk by(cluster, namespace, pod, container) (10, (max by(cluster, namespace, pod, container) (container_memory_working_set_bytes{container!=""}) - max by(cluster, namespace, pod, container) (kube_pod_container_resource_requests{resource="memory",unit="byte"})) > 100*1024*1024)
    for: 10m
    labels:
      severity: warning
    annotations:
      description: Pod {{$labels.namespace}}/{{$labels.pod}} Memory resources is above than requested {{$value | humanize1024}}
      summary: Memory requested reached

  - alert: PodCPULimit
    expr: (sum by (namespace,pod,container) (rate(container_cpu_usage_seconds_total{container!=""}[5m])) / sum by
      (namespace,pod,container) (kube_pod_container_resource_limits{resource="cpu"})) > 0.9
    for: 5m
    labels:
      severity: warning
    annotations:
      description: Pod {{$labels.namespace}}/{{$labels.pod}} cpu limit/usage {{$value | humanizePercentage}}
      summary: CPU limit reached

  - alert: PodCPUResourcesAboveRequested
    expr: topk by(cluster, namespace, pod, container) (10, (max by(cluster, namespace, pod, container) (irate(container_cpu_usage_seconds_total{container!=""}[5m])) - max by(cluster, namespace, pod, container) (kube_pod_container_resource_requests{resource="cpu",unit="core"})) > 0.2)
    for: 10m
    labels:
      severity: warning
    annotations:
      description: Pod {{$labels.namespace}}/{{$labels.pod}} CPU resources is above than requested {{$value}}
      summary: CPU requested reached
