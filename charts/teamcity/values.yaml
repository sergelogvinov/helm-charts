# Default values for teamcity.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

server:
  ## If false, teamcity server will not be installed
  ##
  enabled: true

  replicaCount: 1

  # -- Teamcity server runs as cluster
  # ref: https://www.jetbrains.com/help/teamcity/2024.07/multinode-setup.html
  clusterMode: false
  clusterResponsibilities:
    - CAN_PROCESS_BUILD_TRIGGERS
    - CAN_PROCESS_USER_DATA_MODIFICATION_REQUESTS
    - CAN_CHECK_FOR_CHANGES
    - CAN_PROCESS_BUILD_MESSAGES

  # -- Teamcity container image
  image:
    repository: ghcr.io/sergelogvinov/teamcity
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  # -- Teamcity server environment variables
  envs:
    {}
    # TEAMCITY_SERVER_MEM_OPTS: "-Xmx2g -XX:ReservedCodeCacheSize=640m"

  # -- Teamcity database properties
  # ref: https://www.jetbrains.com/help/teamcity/setting-up-an-external-database.html
  configDb: ""
  # configDb: |
  #   connectionUrl=jdbc:postgresql://<host>:5432/<database_name>
  #   connectionProperties.user=<username>
  #   connectionProperties.password=<password>
  #   maxConnections=10

  # -- pod deployment update strategy type.
  # ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#updating-a-deployment
  updateStrategy:
    type: Recreate

  # -- Teamcity server Service Account.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  # -- Annotations for pod.
  # ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}

  # -- Pod Security Context.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  podSecurityContext:
    fsGroup: 1000
    fsGroupChangePolicy: "OnRootMismatch"

  # -- Container Security Context.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  securityContext:
    seccompProfile:
      type: RuntimeDefault
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000

  # -- Resource requests and limits.
  # ref: https://kubernetes.io/docs/user-guide/compute-resources/
  resources:
    # limits:
    #   cpu: 2
    #   memory: 4Gi
    requests:
      cpu: 500m
      memory: 1Gi

  # -- Priority Class Name
  # ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
  priorityClassName: ~

  # -- Persistence parameters
  # ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  persistentVolume:
    ## If true, teamcity will create/use a Persistent Volume Claim
    ## If false, use emptyDir
    ##
    enabled: true

    # -- Teamcity data Persistent Volume Claim annotations
    annotations: {}

    # -- Teamcity data Persistent Volume access modes
    # ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    accessModes:
      - ReadWriteOnce
      # - ReadWriteMany

    # -- teamcity data Persistent Volume size
    size: 10Gi

    # -- Teamcity data Persistent Volume Storage Class
    # If defined, storageClassName: <storageClass>
    # If set to "-", storageClassName: "", which disables dynamic provisioning
    # If undefined (the default) or set to null, no storageClassName spec is
    #   set, choosing the default provisioner.  (gp2 on AWS, standard on
    #   GKE, AWS & OpenStack)
    storageClass: ""

    # -- Teamcity data Persistent Volume existing claim name
    # If defined, PVC must be created manually before volume will be bound
    existingClaim: ""

  # -- Node labels for pod assignment.
  # ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for pod assignment.
  # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations:
    []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  # -- Affinity for pod assignment.
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  # -- Additional containers to add to the server deployment
  # ref: https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#Container
  additionalContainers: []

agent:
  ## If true, teamcity agent deployment will be installed
  ##
  enabled: true

  image:
    repository: ghcr.io/sergelogvinov/teamcity
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  # -- Use a deployment if you want to start teamcity agents by yourself
  # Teamcity can run agents by demand
  replicaCount: 0

  # -- Teamcity agent environment variables
  envs:
    {}
    # DOCKER_TLS_VERIFY: "1"
    # DOCKER_BUILDKIT: "1"
    # DOCKER_HOST: tcp://docker-host:2376
    # SECRET_TOKEN: "secret"

  # -- pod deployment update strategy type.
  # ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#updating-a-deployment
  updateStrategy:
    type: Recreate

  # -- Teamcity agent Service Account.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  # -- Teamcity agent RBAC permission.
  rbac:
    ## If true, teamcity agent rbac rules will be created
    ##
    create: false

    rules: []
    # rules:
    #   - apiGroups:
    #       - ""
    #     resources:
    #       - pods
    #       - services
    #       - deployments
    #     verbs:
    #       - get
    #       - list

  # -- Annotations for pod.
  # ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}

  # -- Pod Security Context.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  podSecurityContext:
    fsGroup: 1000
    fsGroupChangePolicy: "OnRootMismatch"

  # -- Container Security Context.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  securityContext:
    seccompProfile:
      type: RuntimeDefault
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    # readOnlyRootFilesystem: true

  # -- Resource requests and limits.
  # ref: https://kubernetes.io/docs/user-guide/compute-resources/
  resources:
    # limits:
    #   cpu: 2
    #   memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

  # -- Priority Class Name
  # ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
  priorityClassName: ~

  # -- Additional container volume mounts.
  extraVolumeMounts: []
  # -- Additional volumes.
  extraVolumes: []

  # extraVolumeMounts:
  #   - name: certs
  #     mountPath: /home/buildagent/.docker
  # extraVolumes:
  #   - name: certs
  #     secret:
  #       defaultMode: 256
  #       items:
  #       - key: ca.crt
  #         path: ca.pem
  #       - key: tls.crt
  #         path: cert.pem
  #       - key: tls.key
  #         path: key.pem
  #       secretName: docker-tls

  # -- Node labels for pod assignment.
  # ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for pod assignment.
  # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations:
    []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  # -- Affinity for pod assignment.
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

dind:
  enabled: true

  # -- Docker in Docker image.
  # ref: https://hub.docker.com/_/docker/tags?page=1&name=dind
  image:
    repository: docker
    pullPolicy: IfNotPresent
    tag: 26.1-dind

  # -- Resource requests and limits.
  # ref: https://kubernetes.io/docs/user-guide/compute-resources/
  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 512Mi

  # -- Additional container volume mounts.
  extraVolumeMounts: []
  # -- Additional volumes.
  extraVolumes: []

  # -- Persistence parameters for source code
  # ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  persistence:
    enabled: false
    ## A manually managed Persistent Volume and Claim
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:
    # storageClass: "-"
    accessModes:
      - ReadWriteOnce
    size: 100Gi
    annotations: {}

# -- Service parameters
# ref: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  type: ClusterIP
  port: 80

  ipFamilies: [IPv4]

# -- Registry ingress parameters
# ref: http://kubernetes.io/docs/user-guide/ingress/
ingress:
  # -- If true, teamcity Ingress will be created
  enabled: false

  # -- Ingress controller class name
  className: ""

  # -- Ingress annotations
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  # -- Ingress hosts configuration
  hosts:
    - host: chart-example.local
      paths: []

  # -- Ingress TLS configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Expose Teamcity server metrics
metrics:
  enabled: false

  username: prometheus
  password: prometheus

  image:
    repository: nginx
    pullPolicy: IfNotPresent
    tag: 1.23.0-alpine

  # -- Container Security Context.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  securityContext:
    seccompProfile:
      type: RuntimeDefault
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    runAsNonRoot: true
    runAsUser: 101
    runAsGroup: 101

# PostgreSQL chart documentation:
# https://github.com/helm/charts/blob/master/stable/postgresql/README.md
postgresql:
  enabled: false
  postgresqlDatabase: teamcity
  postgresqlUsername: teamcity
  postgresqlPassword: teamcity
