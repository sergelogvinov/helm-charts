{{- if eq .Values.installationType "standalone" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "clickhouse.fullname" . }}
  labels:
    {{- include "clickhouse.labels" . | nindent 4 }}
    {{- with .Values.podlabels }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
spec:
  serviceName: {{ include "clickhouse.fullname" . }}-headless
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
  selector:
    matchLabels:
      {{- include "clickhouse.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: server
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9363"
      {{- end}}
        checksum/envs: {{ toJson .Values.clickhouse.envs | sha256sum }}
      labels:
        {{- include "clickhouse.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: server
        {{- with .Values.podlabels }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
    spec:
      enableServiceLinks: false
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "clickhouse.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # command: ["sleep","600000"]
          {{- if .Values.clickhouse.envs }}
          envFrom:
            - secretRef:
                name: {{ include "clickhouse.fullname" . }}-envs
          {{- end }}
          env:
            - name: HOME
              value: /tmp
          ports:
            - name: http
              containerPort: 8123
            - name: native
              containerPort: 9000
            {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: 9363
              protocol: TCP
            {{- end }}
            {{- if .Values.tlsCerts.create }}
            - name: nativetls
              containerPort: 9440
            - name: interserver
              containerPort: 9010
            {{- else }}
            - name: interserver
              containerPort: 9009
            {{- end }}
          startupProbe:
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 5
            failureThreshold: 600
            periodSeconds: 10
          # livenessProbe:
          #   httpGet:
          #     path: /ping
          #     port: http
          #     scheme: HTTP
          #   initialDelaySeconds: 60
          #   timeoutSeconds: 5
          #   failureThreshold: 10
          #   periodSeconds: 60
          volumeMounts:
            - name: users
              mountPath: /etc/clickhouse-server/users.d
            - name: dictionaries
              mountPath: /etc/clickhouse-server/dictionaries.d
            - name: config
              mountPath: /etc/clickhouse-server/config.d
            - name: logs
              mountPath: /var/log/clickhouse
            - name: data
              mountPath: /var/lib/clickhouse
          {{- if .Values.tlsCerts.create }}
            - name: tlscerts
              mountPath: /etc/ssl/tlscerts
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: users
          configMap:
            name: {{ include "clickhouse.fullname" . }}
            items:
              - key: users.xml
                path: users.xml
        - name: dictionaries
          configMap:
            name: {{ include "clickhouse.fullname" . }}
            items:
              - key: dictionaries.xml
                path: dictionaries.xml
        - name: config
          configMap:
            name: {{ include "clickhouse.fullname" . }}
            items:
              - key: config.xml
                path: config.xml
              - key: logger.xml
                path: logger.xml
              - key: optimization.xml
                path: optimization.xml
              - key: collections.xml
                path: collections.xml
              - key: storage.xml
                path: storage.xml
              - key: backups.xml
                path: backups.xml
            {{- if .Values.clickhouse.customConfig }}
              {{- range $key, $value := .Values.clickhouse.customConfig }}
              - key: {{ $key }}
                path: {{ $key }}
              {{- end }}
            {{- end }}
        - name: logs
          emptyDir: {}
      {{- if .Values.tlsCerts.create }}
        - name: tlscerts
          secret:
            secretName: {{ include "clickhouse.fullname" . }}-server-tls
            defaultMode: 256
      {{- end }}
{{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
{{- else if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
{{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
      {{- with .Values.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
{{- end -}}
{{- end -}}
