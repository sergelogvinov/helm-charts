apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "tailscale.fullname" . }}
  labels:
    {{- include "tailscale.labels" . | nindent 4 }}
data:
  Corefile: |
    .:53 {
        errors
        bind 127.0.0.1 ::1

        health :8080 {
          lameduck 5s
        }

        kubernetes cluster.local in-addr.arpa ip6.arpa {
          pods insecure
          ttl 60
        }

        forward . tls://9.9.9.9 tls://149.112.112.112 1.1.1.1 {
          health_check 60s
          tls_servername dns.quad9.net
          policy sequential
          expire 30s
        }

        cache 300
        loop
        reload
        loadbalance
    }

  entrypoint.sh: |
    #!/bin/sh
    set -e

    [ -f /tmp/labels ] && source /tmp/labels ||:
    export TS_HOSTNAME=$REGION-$NODE
    export TS_KUBE_SECRET=tailscale-$NODE
    export TS_EXTRA_ARGS="--advertise-exit-node --advertise-tags=$TS_TAGS --accept-dns=false --accept-routes=false"

    /bin/sleep 5
    /usr/local/bin/containerboot

  init.sh: |
    #!/bin/sh
    set -e

    TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
    CACERT=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt

    curl --fail --silent --cacert ${CACERT} --header "Authorization: Bearer ${TOKEN}" \
        https://${KUBERNETES_PORT_443_TCP_ADDR}/api/v1/nodes/${NODE} | jq .metadata.labels > /tmp/labels.json

    ZONE=$(jq '."topology.kubernetes.io/zone"' -r /tmp/labels.json)
    REGION=$(jq '."topology.kubernetes.io/region"' -r /tmp/labels.json)

    echo "export ZONE=${ZONE}"      > /tmp/labels
    echo "export REGION=${REGION}" >> /tmp/labels
