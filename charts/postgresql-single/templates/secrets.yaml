{{- $pass := include "postgresql-single.postgresqlPassword" . }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "postgresql-single.fullname" . }}
  labels:
    {{- include "postgresql-single.labels" . | nindent 4 }}
type: Opaque
data:
  postgresqlPassword: {{ $pass | b64enc | quote }}
  {{- if or .Values.backup.enabled .Values.backup.recovery }}
  walg.yaml: {{ include "postgresql-single.walg" . | b64enc | quote }}
  {{- end }}
  {{- if hasKey .Values.backup.walg "AWS_ACCESS_KEY_ID" }}
  accessKey: {{ get .Values.backup.walg "AWS_ACCESS_KEY_ID" | b64enc | quote }}
  secretKey: {{ get .Values.backup.walg "AWS_SECRET_ACCESS_KEY" | b64enc | quote }}
  {{- end }}
{{- if eq .Values.installationType "cnpg" }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "postgresql-single.fullname" . }}-superuser
  labels:
    {{- include "postgresql-single.labels" . | nindent 4 }}
type: kubernetes.io/basic-auth
data:
  user: {{ .Values.postgresqlUsername | b64enc | quote }}
  username: {{ .Values.postgresqlUsername | b64enc | quote }}
  password: {{ $pass | b64enc | quote }}
  pgpass: {{ printf "%s:5432:*:%s:%s" (include "postgresql-single.fullname" .) .Values.postgresqlUsername $pass | b64enc | quote }}
  uri: {{ printf "postgresql://%s:%s@%s:5432/postgres" .Values.postgresqlUsername $pass (include "postgresql-single.fullname" .) | b64enc | quote }}
  host: {{ include "postgresql-single.fullname" . | b64enc | quote }}
  port: {{ "5432" | b64enc | quote }}
{{- end }}
