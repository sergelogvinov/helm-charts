# Default values for keydb.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: eqalpha/keydb
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
clusterDomain: cluster.local

keydb:
  password: ~
  threads: 2

  activeReplica: "yes"
  multiMaster: "yes"

tlsCerts:
  create: false

loadbalancer:
  enabled: false

  replicaCount: 1

  image:
    repository: haproxy
    pullPolicy: IfNotPresent
    tag: 2.4.7

  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 99
    runAsGroup: 99
    fsGroup: 99

  resources:
    limits:
      cpu: 100m
      memory: 64Mi
    requests:
      cpu: 50m
      memory: 32Mi

  livenessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    periodSeconds: 60

  readinessProbe: {}

  # soft/hard
  podAntiAffinityPreset: soft

backup:
  enabled: false
  recovery: false

  image:
    repository: eqalpha/keydb
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  walg: ~

  # schedule: "" to disable cron backup
  schedule: "15 4 * * *"

  cleanPolicy: "retain FULL 3"

  resources:
    # limits:
    #   cpu: 2
    #   memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi

metrics:
  enabled: false
  image:
    repository: oliver006/redis_exporter
    pullPolicy: IfNotPresent
    tag: v1.29.0

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podLabels: {}
podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 999
  runAsGroup: 999
  fsGroup: 999
  fsGroupChangePolicy: "OnRootMismatch"

securityContext:
  seccompProfile:
    type: RuntimeDefault
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  # capabilities:
  #   drop:
  #   - ALL

priorityClassName: ~

terminationGracePeriodSeconds: 30

livenessProbe: {}
#   initialDelaySeconds: 10
#   timeoutSeconds: 1
#   successThreshold: 1
#   periodSeconds: 60

readinessProbe:
  initialDelaySeconds: 1
  timeoutSeconds: 1
  successThreshold: 1
  periodSeconds: 60

startupProbe:
  initialDelaySeconds: 10
  failureThreshold: 10
  successThreshold: 1
  periodSeconds: 10

service:
  type: ClusterIP

resources:
  # limits:
  #   cpu: 1
  #   memory: 512Mi
  requests:
    cpu: 10m
    memory: 64Mi

updateStrategy:
  type: RollingUpdate

# extraVolumes:
#   - name: gcp-certs
#     secret:
#       defaultMode: 420
#       secretName: backup-gcp
# extraVolumeMounts:
#   - name: gcp-certs
#     mountPath: /etc/gcp
#     readOnly: true

persistence:
  enabled: false
  ## A manually managed Persistent Volume and Claim
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:
  # storageClass: "-"
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  annotations: {}

nodeSelector: {}

tolerations: []

# soft/hard
podAntiAffinityPreset: soft
affinity: {}
