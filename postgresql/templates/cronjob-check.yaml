{{- if and .Values.backupCheck.enabled (ne .Values.backupCheck.schedule "") }}
{{- if semverCompare ">=1.22" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: batch/v1
{{- else -}}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: {{ include "postgresql-single.fullname" . }}-check
  labels:
    {{- with .Values.podlabels }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
    {{- include "postgresql-single.crontab.labels" . | nindent 4 }}
    app.kubernetes.io/component: checker
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  schedule: "{{ .Values.backupCheck.schedule }}"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: 43200 # 12h
      backoffLimit: 0
      template:
        metadata:
          name: {{ include "postgresql-single.fullname" . }}
          labels:
            {{- with .Values.podlabels }}
            {{ toYaml . | nindent 12 }}
            {{- end }}
            {{- include "postgresql-single.crontab.labels" . | nindent 12 }}
            app.kubernetes.io/component: checker
        spec:
          restartPolicy: Never
          enableServiceLinks: false
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "postgresql-single.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
            - name: {{ .Chart.Name }}
              securityContext:
                {{- toYaml .Values.securityContext | nindent 16 }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command: ["/bin/sh","-e","/usr/backup/restore-checker.sh"]
              env:
                - name: POSTGRES_INITDB_ARGS
                  value: --data-checksums --auth-host=scram-sha-256
                - name: PGAPPNAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: PGDATA
                  value: {{ .Values.persistence.mountPath }}/data
                - name: POSTGRES_USER
                  value: {{ .Values.postgresqlUsername | quote }}
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "postgresql-single.fullname" . }}
                      key: postgresqlPassword
              volumeMounts:
                - name: data
                  mountPath: {{ .Values.persistence.mountPath }}
                - name: dshm
                  mountPath: /dev/shm
                - name: postgresql-config
                  mountPath: /postgresql/conf
                - name: config
                  mountPath: /etc/walg
                - name: recovery
                  mountPath: /usr/backup
              {{- if .Values.extraVolumeMounts }}
                {{ toYaml .Values.extraVolumeMounts | nindent 16 }}
              {{- end }}
              resources:
                {{- toYaml .Values.backupCheck.resources | nindent 16 }}
          {{- with .Values.backupCheck.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.backupCheck.affinity }}
          affinity:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.backupCheck.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumes:
            - name: dshm
              emptyDir:
                medium: Memory
            - name: postgresql-config
              configMap:
                name: {{ include "postgresql-single.fullname" . }}
                defaultMode: 493
            - name: config
              secret:
                secretName:  {{ include "postgresql-single.fullname" . }}
                defaultMode: 256
                items:
                  - key: walg.yaml
                    path: walg.yaml
            - name: recovery
              configMap:
                name: {{ include "postgresql-single.fullname" . }}
                defaultMode: 493
                items:
                  - key: restore-checker.sh
                    path: restore-checker.sh
          {{- if .Values.extraVolumes -}}
            {{ toYaml .Values.extraVolumes | nindent 12 }}
          {{- end -}}
          {{- if .Values.tlsCerts.create }}
            - name: tlscerts
              secret:
                secretName: {{ include "postgresql-single.fullname" . }}-server-tls
                defaultMode: 256
          {{- end }}
          {{- if .Values.backupCheck.persistence.existingClaim }}
            - name: data
              persistentVolumeClaim:
                claimName: {{ .Values.backupCheck.persistence.existingClaim }}
          {{- else }}
            - name: data
              emptyDir: {}
          {{- end }}
{{- end }}
